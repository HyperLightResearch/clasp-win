#ifndef virtualMachine_H
#define virtualMachine_H

enum vm_codes {
   vm_ref=0,
   vm_const=1,
   vm_closure=2,
   vm_call=3,
   vm_call_receive_one=4,
   vm_call_receive_fixed=5,
   vm_bind=6,
   vm_set=7,
   vm_make_cell=8,
   vm_cell_ref=9,
   vm_cell_set=10,
   vm_make_closure=11,
   vm_make_uninitialized_closure=12,
   vm_initialize_closure=13,
   vm_return=14,
   vm_bind_required_args=15,
   vm_bind_optional_args=16,
   vm_listify_rest_args=17,
   vm_parse_key_args=18,
   vm_jump_8=19,
   vm_jump_16=20,
   vm_jump_24=21,
   vm_jump_if_8=22,
   vm_jump_if_16=23,
   vm_jump_if_24=24,
   vm_jump_if_supplied=25,
   vm_check_arg_count_LE_=26,
   vm_check_arg_count_GE_=27,
   vm_check_arg_count_EQ_=28,
   vm_push_values=29,
   vm_append_values=30,
   vm_pop_values=31,
   vm_mv_call=32,
   vm_mv_call_receive_one=33,
   vm_mv_call_receive_fixed=34,
   vm_entry=35,
   vm_exit_8=36,
   vm_exit_16=37,
   vm_exit_24=38,
   vm_entry_close=39,
   vm_catch=40,
   vm_throw=41,
   vm_catch_close=42,
   vm_special_bind=43,
   vm_symbol_value=44,
   vm_symbol_value_set=45,
   vm_unbind=46,
   vm_progv=47,
   vm_fdefinition=48,
   vm_nil=49,
   vm_eq=50,
   vm_pop=51,
   vm_long=52 };

#endif /*guard */
