(in-package :cmp)

(defun compute-rest-alloc (restvar dspecs)
  (cond ((not restvar) nil)
        ((member `(ignore ,restvar) dspecs :test #'equal) 'ignore)
        ((member `(dynamic-extent ,restvar) dspecs :test #'equal) 'dynamic-extent)
        (t nil)))

(defun lambda-list-arguments (lambda-list)
  (multiple-value-bind (reqargs optargs rest-var key-flag keyargs allow-other-keys auxargs varest-p)
      (core:process-lambda-list lambda-list 'function)
    (declare (ignore auxargs allow-other-keys varest-p key-flag))
    (cmp-log "reqargs = {}%N" reqargs)
    (cmp-log "optargs = {}%N" optargs)
    (cmp-log "rest-var = {}%N" rest-var)
    (cmp-log "keyargs = {}%N" keyargs)
    (let ((args '()))
      (dolist (req (rest reqargs))
        (cmp-log "req-name = {}%N" req)
        (push req args))
      (do ((cur (rest optargs) (cdddr cur)))
          ((null cur) nil)
        (let ((opt-name (car cur))
              (opt-flag (cadr cur)))
          (cmp-log "opt cur = {}%N" cur)
          (cmp-log "opt-name = {}%N" opt-name)
          (cmp-log "opt-flag = {}%N" opt-flag)
          (push opt-name args)
          (when opt-flag (push opt-flag args))))
      (when rest-var (push rest-var args))
      (do ((cur (rest keyargs) (cddddr cur)))
          ((null cur) nil)
        (let ((key-name (caddr cur))
              (key-flag (cadddr cur)))
          (cmp-log "key-name = {}%N" key-name)
          (cmp-log "key-flag = {}%N" key-flag)
          (push key-name args)
          (when key-flag (push key-flag args))))
      (nreverse args))))
        
  
#| (#:REQ8085 #:REQ8086 &OPTIONAL (#:OPT8088 #:OPTP8089) &VA-REST #:REST8087 &KEY
 (:A #:KEY8090 #:KEYP8091) (:B #:KEY8092 #:KEYP8093) (:C #:KEY8094 #:KEYP8095))
(LET ((X #:REQ8085) (Y #:REQ8086))
  (LET* ((R #:REST8087)
         (Z (IF #:OPTP8089 #:OPT8088 NIL))
         (A (IF #:KEYP8091 #:KEY8090 1))
         (B (IF #:KEYP8093 #:KEY8092 (BINIT)))
         (BP #:KEYP8093)
         (C (IF #:KEYP8095 #:KEY8094 NIL)))
    (DECLARE (SPECIAL A))
    "Hello there"
    THE-BODY-CODE)) |#

