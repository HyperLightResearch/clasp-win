
;;;
;;; The following features are important
;;; #+bytecode - use on the bytecode compiler
;;; #-bytecode - use the bclasp compiler
;;; #-bytecodelike - use bclasp special operators
;;; #+bytecodelike - use macros and functions instead of special operators



(eval-when (:execute)
  #+(or)(setq *load-print* t)
  (setq *load-verbose* t))
(load "src/lisp/kernel/tag/start.lisp")
(load "src/lisp/kernel/lsp/prologue.lisp")
(load "src/lisp/kernel/tag/min-start.lisp")
(load "src/lisp/kernel/init.lisp")
(load "src/lisp/kernel/tag/after-init.lisp")
(load "src/lisp/kernel/cmp/runtime-info.lisp")
(load "src/lisp/kernel/lsp/sharpmacros.lisp")
(load "src/lisp/kernel/cmp/jit-setup.lisp")
(load "src/lisp/kernel/clsymbols.lisp")
(load "src/lisp/kernel/lsp/packages.lisp")
(load "src/lisp/kernel/lsp/foundation.lisp")
(load "src/lisp/kernel/lsp/export.lisp")
(load "src/lisp/kernel/lsp/defmacro.lisp")
(load "src/lisp/kernel/lsp/helpfile.lisp")
(load "src/lisp/kernel/lsp/evalmacros.lisp")
(load "src/lisp/kernel/lsp/claspmacros.lisp")
(load "src/lisp/kernel/lsp/source-transformations.lisp")
(load "src/lisp/kernel/lsp/arraylib.lisp")
(load "src/lisp/kernel/lsp/setf.lisp")
(load "src/lisp/kernel/lsp/listlib.lisp")
(load "src/lisp/kernel/lsp/mislib.lisp")
(load "src/lisp/kernel/lsp/defstruct.lisp")
(load "src/lisp/kernel/lsp/predlib.lisp")
(load "src/lisp/kernel/lsp/cdr-5.lisp")
(load "src/lisp/kernel/lsp/cmuutil.lisp")
(load "src/lisp/kernel/lsp/seqmacros.lisp")
(load "src/lisp/kernel/lsp/seq.lisp")
(load "src/lisp/kernel/lsp/seqlib.lisp")
(load "src/lisp/kernel/lsp/iolib.lisp")
(load "src/lisp/kernel/lsp/trace.lisp")
(load "src/lisp/kernel/lsp/debug.lisp")
(load "src/lisp/kernel/cmp/cmpexports.lisp")
(load "src/lisp/kernel/cmp/cmpsetup.lisp")
(load "src/lisp/kernel/cmp/cmpglobals.lisp")
(load "src/lisp/kernel/cmp/cmputil.lisp")
(load "src/lisp/kernel/cmp/cmpintrinsics.lisp")
(load "src/lisp/kernel/cmp/primitives.lisp")
(load "src/lisp/kernel/cmp/cmpir.lisp")
(load "src/lisp/kernel/cmp/cmpeh.lisp")
(load "src/lisp/kernel/cmp/debuginfo.lisp")
(load "src/lisp/kernel/cmp/codegen-vars.lisp")
(load "src/lisp/kernel/cmp/arguments.lisp")
(load "src/lisp/kernel/cmp/cmplambda.lisp")
(load "src/lisp/kernel/cmp/cmprunall.lisp")
(load "src/lisp/kernel/cmp/cmpliteral.lisp")
(load "src/lisp/kernel/cmp/typeq.lisp")
(load "src/lisp/kernel/cmp/codegen-special-form.lisp")
#-bytecode(load "src/lisp/kernel/cmp/codegen.lisp")
#-bytecode(load "src/lisp/kernel/cmp/compile.lisp")
#-bytecode(load "src/lisp/kernel/cmp/codegen-toplevel.lisp")
(load "src/lisp/kernel/cmp/compile-file.lisp")
(load "src/lisp/kernel/cmp/external-clang.lisp")
(load "src/lisp/kernel/cmp/cmpname.lisp")
(load "src/lisp/kernel/cmp/cmpbundle.lisp")

#-bytecode(load "src/lisp/kernel/cmp/cmprepl.lisp")

#+bytecode(load "src/lisp/kernel/cmp/bytecode-compile.lisp")   ;; bytecode-compile
#+bytecode(load "src/lisp/kernel/cmp/cmprepl-bytecode.lisp")   ;; modified cmprepl
#+bytecode(load "src/lisp/kernel/cmp/bytecode-compile.lisp")   ;; bytecode-compile again

(load "src/lisp/kernel/tag/min-pre-epilogue.lisp")
(load "src/lisp/kernel/lsp/epilogue-aclasp.lisp")
(load "src/lisp/kernel/tag/min-end.lisp")
(format t "Loaded aclasp~%")

(setq *features* (remove :clasp-min *features*))

(push :clos *features*)
(push :bclasp *features*)

(load "SYS:SRC;LISP;KERNEL;TAG;START.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PROLOGUE.LISP")
;;;
;;; bytecode compiler won't support these two
#-bytecode(load "SYS:SRC;LISP;KERNEL;LSP;DIRECT-CALLS.LISP")
#-bytecode(load "SYS:GENERATED;CL-WRAPPERS.LISP")

(load "SYS:SRC;LISP;KERNEL;TAG;MIN-START.LISP")
(load "SYS:SRC;LISP;KERNEL;INIT.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;AFTER-INIT.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;RUNTIME-INFO.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SHARPMACROS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;JIT-SETUP.LISP")
(load "SYS:SRC;LISP;KERNEL;CLSYMBOLS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PACKAGES.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;FOUNDATION.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;EXPORT.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DEFMACRO.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;HELPFILE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;EVALMACROS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;CLASPMACROS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SOURCE-TRANSFORMATIONS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;ARRAYLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SETF.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;LISTLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;MISLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DEFSTRUCT.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PREDLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;CDR-5.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;CMUUTIL.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SEQMACROS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SEQ.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SEQLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;IOLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;TRACE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DEBUG.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPEXPORTS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPSETUP.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPGLOBALS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPUTIL.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPINTRINSICS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;PRIMITIVES.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPIR.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPEH.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;DEBUGINFO.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CODEGEN-VARS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;ARGUMENTS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPLAMBDA.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPRUNALL.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPLITERAL.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;TYPEQ.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CODEGEN-SPECIAL-FORM.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CODEGEN.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;COMPILE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CODEGEN-TOPLEVEL.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;COMPILE-FILE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;EXTERNAL-CLANG.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPNAME.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPBUNDLE.LISP")
;;;(load "SYS:SRC;LISP;KERNEL;CMP;CMPREPL.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;MIN-PRE-EPILOGUE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;EPILOGUE-ACLASP.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;MIN-END.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;BCLASP-START.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;CMPWALK.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;ASSERT.LISP")
(load "sys:src;lisp;kernel;lsp;iolib.lisp")
(load "SYS:SRC;LISP;KERNEL;LSP;NUMLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DESCRIBE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;MODULE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;LOOP2.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;DISASSEMBLE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-CHARACTER.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-NUMBER.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-TYPE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-CONTROL.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-SEQUENCE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-CONS.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-ARRAY.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-OBJECT.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-CONDITION.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;OPT;OPT-PRINT.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;SHIFTF-ROTATEF.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;ASSORTED.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PACKLIB.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DEFPACKAGE.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;FORMAT.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;MP.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;ATOMICS.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;PACKAGE.LISP")
(progn
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;PACKAGE.LISP")

  ;; Add the :static-gfs flag
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;FLAG.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;CONSTRUCTOR.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;REINITIALIZER.LISP")
  ;; DEFUN invalidate-designated-changers
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;CHANGER.LISP")
  )
(load "SYS:SRC;LISP;KERNEL;CLOS;HIERARCHY.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;CPL.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;STD-SLOT-VALUE.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;SLOT.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;BOOT.LISP")

;;
;; DEFUN (setf find-class) that invokes invalidate-designated-changers because #+static-gfs is a *feature*
;;
;; So I turn off :static-gfs here
;;
(format t "Before loading KERNEL.LISP *features* -> ~s~%" *features*)
#+bytecode(setf *features* (remove :static-gfs *features*))


(load "SYS:SRC;LISP;KERNEL;CLOS;KERNEL.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;OUTCOME.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;DISCRIMINATE.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;DTREE.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;EFFECTIVE-ACCESSOR.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;CLOSFASTGF.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;SATIATION.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;METHOD.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;COMBIN.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;STD-ACCESSORS.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;DEFCLASS.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;SLOTVALUE.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;STANDARD.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;BUILTIN.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;CHANGE.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;STDMETHOD.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;GENERIC.LISP")

;; Invoke (setf find-class) - this will invoke invalidate-designated-changers
(load "SYS:SRC;LISP;KERNEL;CLOS;FIXUP.LISP")
(progn
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;CELL.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;EFFECTIVE-METHOD.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;SVUC.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;SHARED-INITIALIZE.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;INITIALIZE-INSTANCE.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;ALLOCATE-INSTANCE.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;MAKE-INSTANCE.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;COMPUTE-CONSTRUCTOR.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;DEPENDENTS.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;COMPILER-MACROS.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;REINITIALIZE-INSTANCE.LISP")
  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;UPDATE-INSTANCE-FOR-DIFFERENT-CLASS.LISP")

  ;; DEFUN invalidate-changer  for the first time

  (load "SYS:SRC;LISP;KERNEL;CLOS;STATIC-GFS;CHANGE-CLASS.LISP")
  )
(load "SYS:SRC;LISP;KERNEL;LSP;SOURCE-LOCATION.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;DEFVIRTUAL.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;CONDITIONS.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;PRINT.LISP")
;;;
;;; package-iterator fails
;;;
(load "SYS:SRC;LISP;KERNEL;CLOS;STREAMS.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;SEQUENCES.LISP")
;;; Something else fails
;;;(load "SYS:SRC;LISP;KERNEL;LSP;PPRINT.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;COMPILER-CONDITIONS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PACKLIB2.LISP")
(load "SYS:SRC;LISP;KERNEL;CLOS;INSPECT.LISP")
;;; Another broken compilation that segfaults
(load "SYS:SRC;LISP;KERNEL;LSP;FLI.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;POSIX.LISP")
;;; Another broken compilation that segfaults
(load "SYS:SRC;LISP;MODULES;SOCKETS;SOCKETS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;TOP.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;PRE-EPILOGUE-BCLASP.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;EPILOGUE-BCLASP.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;BCLASP.LISP")
(format t "Done building bclasp - now the stack will overflow (sigh)~%")
;;;(gctools:wait-for-user-signal "Done")


;;; cclasp

(load "src/lisp/kernel/contrib/Acclimation/packages")
(load "src/lisp/kernel/contrib/Acclimation/locale")
(load "src/lisp/kernel/contrib/Acclimation/date")
(load "src/lisp/kernel/contrib/Acclimation/language")
(load "src/lisp/kernel/contrib/Acclimation/language-english")
(load "src/lisp/kernel/contrib/Acclimation/language-french")
(load "src/lisp/kernel/contrib/Acclimation/language-swedish")
(load "src/lisp/kernel/contrib/Acclimation/language-vietnamese")
(load "src/lisp/kernel/contrib/Acclimation/language-japanese")
(load "src/lisp/kernel/contrib/Acclimation/condition")
(load "src/lisp/kernel/contrib/Acclimation/documentation")
(load "src/lisp/kernel/contrib/Acclimation/init")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/packages")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/generic-functions")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/cst")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/cons-cst")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/listify")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/cstify")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/cst-from-expression")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/quasiquotation")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/reconstruct")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/declarations")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/body")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/list-structure")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/bindings")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/conditions")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/condition-reporters-english")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/client")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/ensure-proper")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/grammar-symbols")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/lambda-list-keywords")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/grammar")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/standard-grammars")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/earley-item")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/earley-state")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/parser")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/scanner-action")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/earley")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/parse-top-levels")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Lambda-list/unparse")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/package")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/definitions")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/binding")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/strings")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/conditions")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/symbols")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/macros")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/functions")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/lists")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/types")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/io")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/hash-tables")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/control-flow")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/arrays")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/sequences")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/numbers")
(load "src/lisp/kernel/contrib/alexandria/alexandria-1/features")
(load "src/lisp/kernel/contrib/alexandria/alexandria-2/package")
(load "src/lisp/kernel/contrib/alexandria/alexandria-2/arrays")
(load "src/lisp/kernel/contrib/alexandria/alexandria-2/control-flow")
(load "src/lisp/kernel/contrib/alexandria/alexandria-2/sequences")
(load "src/lisp/kernel/contrib/alexandria/alexandria-2/lists")
(load "src/lisp/kernel/contrib/closer-mop/closer-mop-packages")
(load "src/lisp/kernel/contrib/closer-mop/closer-mop-shared")
(load "src/lisp/kernel/contrib/closer-mop/closer-clasp")
(load "src/lisp/kernel/contrib/Eclector/code/base/package")
(load "src/lisp/kernel/contrib/Eclector/code/base/conditions")
(load "src/lisp/kernel/contrib/Eclector/code/base/read-char")
(load "src/lisp/kernel/contrib/Eclector/code/base/messages-english")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/package")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/variables")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/conditions")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/generic-functions")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/messages-english")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/simple/package")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/simple/readtable")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/simple/methods")
(load "src/lisp/kernel/contrib/Eclector/code/readtable/simple/messages-english")
(load "src/lisp/kernel/contrib/Eclector/code/reader/package")
(load "src/lisp/kernel/contrib/Eclector/code/reader/generic-functions")
(load "src/lisp/kernel/contrib/Eclector/code/reader/more-variables")
(load "src/lisp/kernel/contrib/Eclector/code/reader/additional-conditions")
(load "src/lisp/kernel/contrib/Eclector/code/reader/utilities")
(load "src/lisp/kernel/contrib/Eclector/code/reader/tokens")
(load "src/lisp/kernel/contrib/Eclector/code/reader/read-common")
(load "src/lisp/kernel/contrib/Eclector/code/reader/read")
(load "src/lisp/kernel/contrib/Eclector/code/reader/macro-functions")
(load "src/lisp/kernel/contrib/Eclector/code/reader/init")
(load "src/lisp/kernel/contrib/Eclector/code/reader/quasiquote-macro")
(load "src/lisp/kernel/contrib/Eclector/code/reader/fixup")
(load "src/lisp/kernel/contrib/Eclector/code/reader/messages-english")
(load "src/lisp/kernel/contrib/Eclector/code/parse-result/package")
(load "src/lisp/kernel/contrib/Eclector/code/parse-result/client")
(load "src/lisp/kernel/contrib/Eclector/code/parse-result/generic-functions")
(load "src/lisp/kernel/contrib/Eclector/code/parse-result/read")
(load "src/lisp/kernel/contrib/Eclector/code/concrete-syntax-tree/package")
(load "src/lisp/kernel/contrib/Eclector/code/concrete-syntax-tree/read")
(load "src/lisp/kernel/contrib/Cleavir/Input-output/packages")
(load "src/lisp/kernel/contrib/Cleavir/Input-output/io")
(load "src/lisp/kernel/contrib/Cleavir/Attributes/packages")
(load "src/lisp/kernel/contrib/Cleavir/Attributes/flags")
(load "src/lisp/kernel/contrib/Cleavir/Attributes/attributes")
(load "src/lisp/kernel/contrib/Cleavir/Primop/packages")
(load "src/lisp/kernel/contrib/Cleavir/Primop/info")
(load "src/lisp/kernel/contrib/Cleavir/Primop/definitions")
(load "src/lisp/kernel/contrib/Cleavir/Set/packages")
(load "src/lisp/kernel/contrib/Cleavir/Set/set")
(load "src/lisp/kernel/contrib/Cleavir/Conditions/packages")
(load "src/lisp/kernel/contrib/Cleavir/Conditions/program-condition")
(load "src/lisp/kernel/contrib/Cleavir/Conditions/origin")
(load "src/lisp/kernel/contrib/Cleavir/Conditions/note")
(load "src/lisp/kernel/contrib/Cleavir/Ctype/packages")
(load "src/lisp/kernel/contrib/Cleavir/Ctype/generic-functions")
(load "src/lisp/kernel/contrib/Cleavir/Ctype/other-functions")
(load "src/lisp/kernel/contrib/Cleavir/Ctype/default")
(load "src/lisp/kernel/contrib/Cleavir/BIR/packages")
(setf *load-print* t)
(load "src/lisp/kernel/contrib/Cleavir/BIR/structure")
(load "src/lisp/kernel/contrib/Cleavir/BIR/instructions")
(load "src/lisp/kernel/contrib/Cleavir/BIR/map")
(load "src/lisp/kernel/contrib/Cleavir/BIR/conditions")
(load "src/lisp/kernel/contrib/Cleavir/BIR/graph-modifications")
(load "src/lisp/kernel/contrib/Cleavir/BIR/verify")
(load "src/lisp/kernel/contrib/Cleavir/BIR/disassemble")
(load "src/lisp/kernel/contrib/Cleavir/BIR/condition-reporters-english")
(load "src/lisp/kernel/contrib/Cleavir/Meter/packages")
(load "src/lisp/kernel/contrib/Cleavir/Meter/meter")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/packages")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/general-purpose-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/fixnum-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/simple-float-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/cons-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/standard-object-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/array-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/scope-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/graphviz-drawing")
(load "src/lisp/kernel/contrib/Cleavir/Abstract-syntax-tree/map-ast")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/packages")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/infrastructure")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/compile-general-purpose-asts")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/compile-multiple-value-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/compile-primops")
(load "src/lisp/kernel/contrib/Cleavir/AST-to-BIR/compile-fixnum-related-asts")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/packages")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/eliminate-catches")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/process-captured-variables")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/delete-temporary-variables")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/interpolate-function")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/copy-function")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/inline")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/simple-unwind")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/meta-evaluate")
(load "src/lisp/kernel/contrib/Cleavir/BIR-transformations/generate-type-checks")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/variables")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/generic-functions")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/conditions")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/whole-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/condition-generation")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/required-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/optional-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/rest-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/key-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/aux-parameters")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/lambda-list")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/parse-macro")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/db-defmacro")
(load "src/lisp/kernel/contrib/Concrete-Syntax-Tree/Destructuring/condition-reporters-english")
(load "src/lisp/kernel/contrib/Cleavir/AST-transformations/packages")
(load "src/lisp/kernel/contrib/Cleavir/AST-transformations/clone")
(load "src/lisp/kernel/contrib/Cleavir/AST-transformations/replace")
(load "src/lisp/kernel/contrib/Cleavir/AST-transformations/hoist-load-time-value")
(load "src/lisp/kernel/contrib/Cleavir/Environment/packages")
(load "src/lisp/kernel/contrib/Cleavir/Environment/query")
(load "src/lisp/kernel/contrib/Cleavir/Environment/augmentation-functions")
(load "src/lisp/kernel/contrib/Cleavir/Environment/default-augmentation-classes")
(load "src/lisp/kernel/contrib/Cleavir/Environment/compile-time")
(load "src/lisp/kernel/contrib/Cleavir/Environment/optimize-qualities")
(load "src/lisp/kernel/contrib/Cleavir/Environment/declarations")
(load "src/lisp/kernel/contrib/Cleavir/Environment/type-information")
(load "src/lisp/kernel/contrib/Cleavir/Environment/default-info-methods")
(load "src/lisp/kernel/contrib/Cleavir/Environment/eval")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/packages")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/conditions")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/condition-reporters-english")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/policy")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/define-policy")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/optimize")
(load "src/lisp/kernel/contrib/Cleavir/Compilation-policy/compute")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/packages")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/conditions")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/condition-reporters-english")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/environment-augmentation")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/environment-query")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/variables")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/generic-functions")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-function-reference")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-special-binding")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/utilities")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/set-or-bind-variable")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/process-progn")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-sequence")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-variable")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/process-init-parameter")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/itemize-declaration-specifiers")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/itemize-lambda-list")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/lambda-list-from-parameter-groups")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-setq")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-let-and-letstar")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-code")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-lambda-call")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-constant")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-special")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-primop")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/convert-cst")
(load "src/lisp/kernel/contrib/Cleavir/CST-to-AST/cst-to-ast")
(load "src/lisp/kernel/contrib/Cleavir/Stealth-mixins/packages")
(load "src/lisp/kernel/contrib/Cleavir/Stealth-mixins/stealth-mixins")
(load "src/lisp/kernel/cleavir/packages" "src/lisp/kernel/cleavir/system")
(load "src/lisp/kernel/cleavir/policy" "src/lisp/kernel/cleavir/reader")
(load "src/lisp/kernel/cleavir/ast" "src/lisp/kernel/cleavir/convert-form")
(load "src/lisp/kernel/cleavir/convert-special")
(load "src/lisp/kernel/cleavir/ast-interpreter" "src/lisp/kernel/cleavir/toplevel")
(load "src/lisp/kernel/cleavir/setup" "src/lisp/kernel/cleavir/fold")
(load "src/lisp/kernel/cleavir/ir" "src/lisp/kernel/cleavir/compile-file-client")
(load "src/lisp/kernel/cleavir/translation-environment")
(load "src/lisp/kernel/cleavir/bir" "src/lisp/kernel/cleavir/bmir")
(load "src/lisp/kernel/cleavir/vaslist" "src/lisp/kernel/cleavir/bir-to-bmir")
(load "src/lisp/kernel/cleavir/representation-selection")
(load "src/lisp/kernel/cleavir/landing-pad" "src/lisp/kernel/cleavir/primop")
(load "src/lisp/kernel/cleavir/transform" "src/lisp/kernel/cleavir/translate")
(load "src/lisp/kernel/cleavir/fixup-eclector-readtables")
(load "src/lisp/kernel/cleavir/activate-clasp-readtables-for-eclector")
(load "src/lisp/kernel/cleavir/define-unicode-tables")
(load "src/lisp/kernel/cleavir/inline-prep")
(load "src/lisp/kernel/cleavir/auto-compile")
(load "src/lisp/kernel/cleavir/inline"))


(load "SYS:SRC;LISP;KERNEL;LSP;QUEUE.LISP")
(load "SYS:SRC;LISP;KERNEL;CMP;COMPILE-FILE-PARALLEL.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;GENERATED-ENCODINGS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;PROCESS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;ENCODINGS.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;CLTL2.LISP")
(load "SYS:GENERATED;CCLASP-IMMUTABLE.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;PRE-EPILOGUE-CCLASP.LISP")
(load "SYS:SRC;LISP;KERNEL;LSP;EPILOGUE-CCLASP.LISP")
(load "SYS:SRC;LISP;KERNEL;TAG;CCLASP.LISP")

